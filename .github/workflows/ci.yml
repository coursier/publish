name: CI
on:
  push:
    branches:
    - master
    tags:
    - "v*"
  pull_request:

jobs:
  test:
    runs-on: "ubuntu-latest"
    needs:
      - format
      - scalafix
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: coursier/setup-action@v1
      with:
        jvm: temurin:17
    - name: Test
      run: ./mill __.compile && ./mill __.test

  format:
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - uses: VirtusLab/scala-cli-setup@v1
      - run: scala-cli fmt . --check

  scalafix:
    timeout-minutes: 30
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - uses: coursier/cache-action@v6
      - uses: coursier/setup-action@v1
        with:
          jvm: temurin:17
      - name: Run scalafix
        run: ./mill -i __.fix --check

  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs:
      - format
      - scalafix
      - test
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: coursier/cache-action@v6
    - uses: coursier/setup-action@v1
      with:
        jvm: temurin:17
    - run: .github/scripts/gpg-setup.sh
      env:
        PGP_SECRET: ${{ secrets.PUBLISH_SECRET_KEY }}
    - name: Release
      run: ./mill -i publishSonatype --tasks __.publishArtifacts
      env:
        PGP_PASSWORD: ${{ secrets.PUBLISH_SECRET_KEY_PASSWORD }}
        SONATYPE_PASSWORD: ${{ secrets.PUBLISH_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.PUBLISH_USER }}
